def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "iFinePay.pay"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            aaptOptions {
                ignoreAssetsPattern "!mlkit_pose"
            }
        }
        debug {
                signingConfig signingConfigs.debug
                aaptOptions {
                ignoreAssetsPattern '!mlkit_pose:'
            }
        }    

        packagingOptions {
            exclude 'lib/**/libtranslate_jni.so'
            exclude 'lib/**/libdigitalink.so'
            exclude 'lib/**/libxeno_native.so'
            exclude 'lib/**/libmlkitcommonpipeline.so'
            exclude 'lib/**/libbarhopper_v2.so'
            exclude 'lib/**/libclassifier_jni.so'
            exclude 'lib/**/libface_detector_v2_jni.so'
            exclude 'lib/**/libtensorflowlite_jni.so'
            exclude 'lib/**/liblanguage_id_jni.so'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex: 2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:multidex:1.0.3"
    implementation 'com.google.mlkit:playstore-dynamic-feature-support:16.0.0-beta1'
}

apply plugin: 'com.google.gms.google-services'